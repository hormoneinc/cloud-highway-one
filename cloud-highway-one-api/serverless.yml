service: cloud-highway-one-api

provider:
  name: aws
  region: us-west-2
  runtime: nodejs12.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
      Resource: 'arn:aws:dynamodb:us-west-2:*:table/CloudHighwayOne'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:BatchGetItem
      Resource: 'arn:aws:dynamodb:us-west-2:*:table/CloudHighwayOneCache'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    RAPID_API_SECRET_KEY: ${env:RAPID_API_SECRET_KEY} # secret key from https://rapidapi.com/

functions:
  authorizerFunc:
    handler: auth.authorize
  GetInterRegionalLatency:
    handler: api/getLatency.interRegionalLatency
    timeout: 10
    events:
      - http:
          path: getLatency
          method: get
          authorizer:
            name: authorizerFunc
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.X-RapidAPI-Proxy-Secret
          statusCodes:
            200:
              pattern: ''
            400:
              pattern: '.*"statusCode":400,.*'
            500:
              pattern: '.*"statusCode":500,.*'
  GetBestDstRegionFromSrcRegion:
    handler: api/getBestDstRegion.getBestDestinationRegionFromSourceRegion
    timeout: 10
    events:
      - http:
          path: getBestDstRegion
          method: get
          authorizer:
            name: authorizerFunc
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.X-RapidAPI-Proxy-Secret
          statusCodes:
            200:
              pattern: ''
            400:
              pattern: '.*"statusCode":400,.*'
            500:
              pattern: '.*"statusCode":500,.*'
  GetAllDstRegionFromSrcRegion:
    handler: api/getAllDstRegion.getAllInterRegionalLatenciesFromSourceRegion
    timeout: 10
    events:
      - http:
          path: getAllDstRegion
          method: get
          authorizer:
            name: authorizerFunc
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.X-RapidAPI-Proxy-Secret
          statusCodes:
            200:
              pattern: ''
            400:
              pattern: '.*"statusCode":400,.*'
            500:
              pattern: '.*"statusCode":500,.*'
  GetAllData:
    handler: api/getAllData.getAllData
    timeout: 15
    events:
      - http:
          path: getAllData
          method: get
          authorizer:
            name: authorizerFunc
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.X-RapidAPI-Proxy-Secret
          statusCodes:
            200:
              pattern: ''
            400:
              pattern: '.*"statusCode":400,.*'
            500:
              pattern: '.*"statusCode":500,.*'
